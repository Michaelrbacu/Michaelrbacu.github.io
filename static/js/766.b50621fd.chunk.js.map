{"version":3,"file":"static/js/766.b50621fd.chunk.js","mappings":"mLA0DA,MAvDA,WACE,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GA8B1B,OA5BAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcC,aAAaC,QAAQ,SACrCF,GACFN,EAASS,KAAKC,MAAMJ,GAExB,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WACRE,aAAaI,QAAQ,QAASF,KAAKG,UAAUb,GAC/C,GAAG,CAACA,KAoBFc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,eACZC,MAAOhB,EACPiB,SAxBkB,SAACC,GACzBjB,EAAWiB,EAAMC,OAAOH,MAC1B,KAwBMH,EAAAA,EAAAA,KAAA,UAAQO,QAtBQ,WACpB,GAAuB,KAAnBpB,EAAQqB,OAAe,CACzB,IAAMC,EAAY,GAAAC,QAAAC,EAAAA,EAAAA,GAAO5B,GAAK,CAAEI,IAChCH,EAASyB,GACTrB,EAAW,GACb,CACF,EAgBqCW,SAAC,iBAElCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SACtBhB,EAAM6B,KAAI,SAACC,EAAMC,GAAK,OACrBjB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGc,GACDb,EAAAA,EAAAA,KAAA,UAAQO,QAAS,kBApBF,SAACO,GACxB,IAAML,EAAe1B,EAAMgC,QAAO,SAACC,EAAGC,GAAC,OAAKA,IAAMH,CAAK,IACvD9B,EAASyB,EACX,CAiBiCS,CAAiBJ,EAAM,EAACf,SAAC,aAFzCe,EAGJ,QAKf,C","sources":["components/todo/todo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./todo.css\";\r\n\r\nfunction Todo() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const storedTasks = localStorage.getItem(\"tasks\");\r\n    if (storedTasks) {\r\n      setTasks(JSON.parse(storedTasks));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setNewTask(event.target.value);\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.trim() !== \"\") {\r\n      const updatedTasks = [...tasks, newTask];\r\n      setTasks(updatedTasks);\r\n      setNewTask(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = (index) => {\r\n    const updatedTasks = tasks.filter((_, i) => i !== index);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className=\"todo-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter a task\"\r\n          value={newTask}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleAddTask}>Add Task</button>\r\n      </div>\r\n      <ul className=\"todo-list\">\r\n        {tasks.map((task, index) => (\r\n          <li key={index}>\r\n            {task}\r\n            <button onClick={() => handleDeleteTask(index)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","newTask","setNewTask","useEffect","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","_jsxs","className","children","_jsx","type","placeholder","value","onChange","event","target","onClick","trim","updatedTasks","concat","_toConsumableArray","map","task","index","filter","_","i","handleDeleteTask"],"sourceRoot":""}